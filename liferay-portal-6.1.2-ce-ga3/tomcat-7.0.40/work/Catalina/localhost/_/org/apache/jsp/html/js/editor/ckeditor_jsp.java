/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.40
 * Generated at: 2013-12-30 08:21:03 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.html.js.editor;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.liferay.counter.service.CounterLocalServiceUtil;
import com.liferay.portal.NoSuchUserException;
import com.liferay.portal.kernel.bean.BeanParamUtil;
import com.liferay.portal.kernel.bean.BeanPropertiesUtil;
import com.liferay.portal.kernel.cal.Recurrence;
import com.liferay.portal.kernel.captcha.CaptchaMaxChallengesException;
import com.liferay.portal.kernel.captcha.CaptchaTextException;
import com.liferay.portal.kernel.configuration.Filter;
import com.liferay.portal.kernel.dao.orm.QueryUtil;
import com.liferay.portal.kernel.dao.search.AlwaysTrueRowChecker;
import com.liferay.portal.kernel.dao.search.DisplayTerms;
import com.liferay.portal.kernel.dao.search.JSPSearchEntry;
import com.liferay.portal.kernel.dao.search.ResultRow;
import com.liferay.portal.kernel.dao.search.RowChecker;
import com.liferay.portal.kernel.dao.search.SearchContainer;
import com.liferay.portal.kernel.dao.search.SearchEntry;
import com.liferay.portal.kernel.dao.search.TextSearchEntry;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.io.unsync.UnsyncStringReader;
import com.liferay.portal.kernel.json.JSONArray;
import com.liferay.portal.kernel.json.JSONFactoryUtil;
import com.liferay.portal.kernel.json.JSONObject;
import com.liferay.portal.kernel.language.LanguageUtil;
import com.liferay.portal.kernel.language.LanguageWrapper;
import com.liferay.portal.kernel.language.UnicodeLanguageUtil;
import com.liferay.portal.kernel.log.Log;
import com.liferay.portal.kernel.log.LogFactoryUtil;
import com.liferay.portal.kernel.log.LogUtil;
import com.liferay.portal.kernel.messaging.DestinationNames;
import com.liferay.portal.kernel.messaging.MessageBusUtil;
import com.liferay.portal.kernel.portlet.DynamicRenderRequest;
import com.liferay.portal.kernel.portlet.LiferayPortletMode;
import com.liferay.portal.kernel.portlet.LiferayPortletRequest;
import com.liferay.portal.kernel.portlet.LiferayPortletResponse;
import com.liferay.portal.kernel.portlet.LiferayPortletURL;
import com.liferay.portal.kernel.portlet.LiferayWindowState;
import com.liferay.portal.kernel.search.Field;
import com.liferay.portal.kernel.servlet.BrowserSnifferUtil;
import com.liferay.portal.kernel.servlet.DynamicServletRequest;
import com.liferay.portal.kernel.servlet.ServletContextPool;
import com.liferay.portal.kernel.servlet.ServletContextUtil;
import com.liferay.portal.kernel.servlet.SessionErrors;
import com.liferay.portal.kernel.servlet.SessionMessages;
import com.liferay.portal.kernel.servlet.StringServletResponse;
import com.liferay.portal.kernel.staging.LayoutStagingUtil;
import com.liferay.portal.kernel.upload.UploadException;
import com.liferay.portal.kernel.util.ArrayUtil;
import com.liferay.portal.kernel.util.BooleanWrapper;
import com.liferay.portal.kernel.util.CalendarFactoryUtil;
import com.liferay.portal.kernel.util.CalendarUtil;
import com.liferay.portal.kernel.util.CharPool;
import com.liferay.portal.kernel.util.Constants;
import com.liferay.portal.kernel.util.ContentTypes;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.FastDateFormatFactoryUtil;
import com.liferay.portal.kernel.util.FileUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.HtmlUtil;
import com.liferay.portal.kernel.util.Http;
import com.liferay.portal.kernel.util.HttpUtil;
import com.liferay.portal.kernel.util.IntegerWrapper;
import com.liferay.portal.kernel.util.JavaConstants;
import com.liferay.portal.kernel.util.KeyValuePair;
import com.liferay.portal.kernel.util.KeyValuePairComparator;
import com.liferay.portal.kernel.util.ListUtil;
import com.liferay.portal.kernel.util.LocaleUtil;
import com.liferay.portal.kernel.util.LocalizationUtil;
import com.liferay.portal.kernel.util.MathUtil;
import com.liferay.portal.kernel.util.ObjectValuePair;
import com.liferay.portal.kernel.util.OrderByComparator;
import com.liferay.portal.kernel.util.OrderedProperties;
import com.liferay.portal.kernel.util.ParamUtil;
import com.liferay.portal.kernel.util.PrefsParamUtil;
import com.liferay.portal.kernel.util.PropertiesParamUtil;
import com.liferay.portal.kernel.util.PropertiesUtil;
import com.liferay.portal.kernel.util.PropsKeys;
import com.liferay.portal.kernel.util.ReleaseInfo;
import com.liferay.portal.kernel.util.ResourceBundleUtil;
import com.liferay.portal.kernel.util.ServerDetector;
import com.liferay.portal.kernel.util.SetUtil;
import com.liferay.portal.kernel.util.SortedArrayList;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringComparator;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.kernel.util.StringUtil;
import com.liferay.portal.kernel.util.TextFormatter;
import com.liferay.portal.kernel.util.Time;
import com.liferay.portal.kernel.util.TimeZoneUtil;
import com.liferay.portal.kernel.util.Tuple;
import com.liferay.portal.kernel.util.UnicodeFormatter;
import com.liferay.portal.kernel.util.UnicodeProperties;
import com.liferay.portal.kernel.util.UniqueList;
import com.liferay.portal.kernel.util.Validator;
import com.liferay.portal.kernel.workflow.WorkflowConstants;
import com.liferay.portal.model.*;
import com.liferay.portal.model.impl.*;
import com.liferay.portal.security.auth.AuthTokenUtil;
import com.liferay.portal.security.auth.PrincipalException;
import com.liferay.portal.security.pacl.PACLClassLoaderUtil;
import com.liferay.portal.security.permission.ActionKeys;
import com.liferay.portal.security.permission.PermissionChecker;
import com.liferay.portal.security.permission.ResourceActionsUtil;
import com.liferay.portal.service.*;
import com.liferay.portal.service.permission.GroupPermissionUtil;
import com.liferay.portal.service.permission.LayoutPermissionUtil;
import com.liferay.portal.service.permission.LayoutPrototypePermissionUtil;
import com.liferay.portal.service.permission.LayoutSetPrototypePermissionUtil;
import com.liferay.portal.service.permission.PortalPermissionUtil;
import com.liferay.portal.service.permission.PortletPermissionUtil;
import com.liferay.portal.struts.StrutsUtil;
import com.liferay.portal.struts.TilesAttributeUtil;
import com.liferay.portal.theme.PortletDisplay;
import com.liferay.portal.theme.ThemeDisplay;
import com.liferay.portal.util.CookieKeys;
import com.liferay.portal.util.JavaScriptBundleUtil;
import com.liferay.portal.util.Portal;
import com.liferay.portal.util.PortalUtil;
import com.liferay.portal.util.PortletCategoryKeys;
import com.liferay.portal.util.PortletKeys;
import com.liferay.portal.util.PrefsPropsUtil;
import com.liferay.portal.util.PropsUtil;
import com.liferay.portal.util.PropsValues;
import com.liferay.portal.util.SessionClicks;
import com.liferay.portal.util.SessionTreeJSClicks;
import com.liferay.portal.util.ShutdownUtil;
import com.liferay.portal.util.WebAppPool;
import com.liferay.portal.util.WebKeys;
import com.liferay.portal.util.comparator.PortletCategoryComparator;
import com.liferay.portal.util.comparator.PortletTitleComparator;
import com.liferay.portal.webserver.WebServerServletTokenUtil;
import com.liferay.portlet.InvokerPortlet;
import com.liferay.portlet.PortalPreferences;
import com.liferay.portlet.PortletConfigFactoryUtil;
import com.liferay.portlet.PortletInstanceFactoryUtil;
import com.liferay.portlet.PortletPreferencesFactoryUtil;
import com.liferay.portlet.PortletResponseImpl;
import com.liferay.portlet.PortletSetupUtil;
import com.liferay.portlet.PortletURLFactoryUtil;
import com.liferay.portlet.PortletURLImpl;
import com.liferay.portlet.PortletURLUtil;
import com.liferay.portlet.RenderParametersPool;
import com.liferay.portlet.RenderRequestFactory;
import com.liferay.portlet.RenderRequestImpl;
import com.liferay.portlet.RenderResponseFactory;
import com.liferay.portlet.RenderResponseImpl;
import com.liferay.portlet.portletconfiguration.util.PortletConfigurationUtil;
import com.liferay.portlet.sites.util.SitesUtil;
import com.liferay.util.ContentUtil;
import com.liferay.util.CreditCard;
import com.liferay.util.Encryptor;
import com.liferay.util.JS;
import com.liferay.util.PKParser;
import com.liferay.util.PwdGenerator;
import com.liferay.util.State;
import com.liferay.util.StateUtil;
import com.liferay.util.log4j.Levels;
import com.liferay.util.portlet.PortletRequestUtil;
import com.liferay.util.xml.XMLFormatter;
import java.io.Serializable;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.Format;
import java.text.NumberFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Calendar;
import java.util.Collection;
import java.util.Collections;
import java.util.Currency;
import java.util.Date;
import java.util.Enumeration;
import java.util.GregorianCalendar;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Iterator;
import java.util.LinkedHashMap;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.Properties;
import java.util.ResourceBundle;
import java.util.Set;
import java.util.Stack;
import java.util.TimeZone;
import java.util.TreeMap;
import java.util.TreeSet;
import javax.portlet.MimeResponse;
import javax.portlet.PortletConfig;
import javax.portlet.PortletContext;
import javax.portlet.PortletException;
import javax.portlet.PortletMode;
import javax.portlet.PortletPreferences;
import javax.portlet.PortletRequest;
import javax.portlet.PortletResponse;
import javax.portlet.PortletURL;
import javax.portlet.ResourceURL;
import javax.portlet.UnavailableException;
import javax.portlet.ValidatorException;
import javax.portlet.WindowState;
import com.liferay.taglib.aui.AUIUtil;
import com.liferay.taglib.util.InlineUtil;

public final class ckeditor_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {


public String marshallParams(Map<String, String> params) {
	StringBundler sb = new StringBundler();

	if (params != null) {
		for (Map.Entry<String, String> configParam : params.entrySet()) {
			sb.append(StringPool.AMPERSAND);
			sb.append(configParam.getKey());
			sb.append(StringPool.EQUAL);
			sb.append(HttpUtil.encodeURL(configParam.getValue()));
		}
	}

	return sb.toString();
}

private static Set<String> _ckEditorConfigFileNames = SetUtil.fromArray(new String[] {"ckconfig.jsp", "ckconfig_bbcode.jsp", "ckconfig_creole.jsp"});

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(24);
    _jspx_dependants.put("/WEB-INF/tld/x.tld", Long.valueOf(1388348725271L));
    _jspx_dependants.put("/WEB-INF/tld/struts-html.tld", Long.valueOf(1388348725218L));
    _jspx_dependants.put("/WEB-INF/tld/displaytag.tld", Long.valueOf(1388348725154L));
    _jspx_dependants.put("/WEB-INF/tld/struts-nested.tld", Long.valueOf(1388348725269L));
    _jspx_dependants.put("/WEB-INF/tld/struts-logic-el.tld", Long.valueOf(1388348725218L));
    _jspx_dependants.put("/WEB-INF/tld/liferay-portlet-ext.tld", Long.valueOf(1388348725208L));
    _jspx_dependants.put("/WEB-INF/tld/struts-bean-el.tld", Long.valueOf(1388348725215L));
    _jspx_dependants.put("/WEB-INF/tld/c.tld", Long.valueOf(1388348725152L));
    _jspx_dependants.put("/WEB-INF/tld/liferay-theme.tld", Long.valueOf(1388348725211L));
    _jspx_dependants.put("/html/taglib/init-ext.jsp", Long.valueOf(1388348742129L));
    _jspx_dependants.put("/WEB-INF/tld/liferay-ui.tld", Long.valueOf(1388348725213L));
    _jspx_dependants.put("/WEB-INF/tld/liferay-security.tld", Long.valueOf(1388348725210L));
    _jspx_dependants.put("/html/common/init-ext.jsp", Long.valueOf(1388348729729L));
    _jspx_dependants.put("/WEB-INF/tld/struts-logic.tld", Long.valueOf(1388348725268L));
    _jspx_dependants.put("/WEB-INF/tld/struts-html-el.tld", Long.valueOf(1388348725216L));
    _jspx_dependants.put("/html/taglib/init.jsp", Long.valueOf(1388348742130L));
    _jspx_dependants.put("/WEB-INF/tld/fn.tld", Long.valueOf(1388348725155L));
    _jspx_dependants.put("/WEB-INF/tld/liferay-portlet.tld", Long.valueOf(1388348725209L));
    _jspx_dependants.put("/html/common/init.jsp", Long.valueOf(1388348729729L));
    _jspx_dependants.put("/WEB-INF/tld/fmt.tld", Long.valueOf(1388348725154L));
    _jspx_dependants.put("/WEB-INF/tld/struts-bean.tld", Long.valueOf(1388348725215L));
    _jspx_dependants.put("/WEB-INF/tld/liferay-util.tld", Long.valueOf(1388348725213L));
    _jspx_dependants.put("/WEB-INF/tld/sql.tld", Long.valueOf(1388348725214L));
    _jspx_dependants.put("/WEB-INF/tld/aui.tld", Long.valueOf(1388348725151L));
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fliferay_002dtheme_005fdefineObjects_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fliferay_002dutil_005fhtml_002dtop_0026_005foutputKey;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005faui_005fscript;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005faui_005fscript_0026_005fuse;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fliferay_002dtheme_005fdefineObjects_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fliferay_002dutil_005fhtml_002dtop_0026_005foutputKey = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005faui_005fscript = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005faui_005fscript_0026_005fuse = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fliferay_002dtheme_005fdefineObjects_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
    _005fjspx_005ftagPool_005fliferay_002dutil_005fhtml_002dtop_0026_005foutputKey.release();
    _005fjspx_005ftagPool_005faui_005fscript.release();
    _005fjspx_005ftagPool_005faui_005fscript_0026_005fuse.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      //  liferay-theme:defineObjects
      com.liferay.taglib.theme.DefineObjectsTag _jspx_th_liferay_002dtheme_005fdefineObjects_005f0 = (com.liferay.taglib.theme.DefineObjectsTag) _005fjspx_005ftagPool_005fliferay_002dtheme_005fdefineObjects_005fnobody.get(com.liferay.taglib.theme.DefineObjectsTag.class);
      _jspx_th_liferay_002dtheme_005fdefineObjects_005f0.setPageContext(_jspx_page_context);
      _jspx_th_liferay_002dtheme_005fdefineObjects_005f0.setParent(null);
      int _jspx_eval_liferay_002dtheme_005fdefineObjects_005f0 = _jspx_th_liferay_002dtheme_005fdefineObjects_005f0.doStartTag();
      if (_jspx_th_liferay_002dtheme_005fdefineObjects_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        _005fjspx_005ftagPool_005fliferay_002dtheme_005fdefineObjects_005fnobody.reuse(_jspx_th_liferay_002dtheme_005fdefineObjects_005f0);
        return;
      }
      _005fjspx_005ftagPool_005fliferay_002dtheme_005fdefineObjects_005fnobody.reuse(_jspx_th_liferay_002dtheme_005fdefineObjects_005f0);
      com.liferay.portal.theme.ThemeDisplay themeDisplay = null;
      com.liferay.portal.model.Company company = null;
      com.liferay.portal.model.Account account = null;
      com.liferay.portal.model.User user = null;
      com.liferay.portal.model.User realUser = null;
      com.liferay.portal.model.Contact contact = null;
      com.liferay.portal.model.Layout layout = null;
      java.util.List layouts = null;
      java.lang.Long plid = null;
      com.liferay.portal.model.LayoutTypePortlet layoutTypePortlet = null;
      java.lang.Long scopeGroupId = null;
      com.liferay.portal.security.permission.PermissionChecker permissionChecker = null;
      java.util.Locale locale = null;
      java.util.TimeZone timeZone = null;
      com.liferay.portal.model.Theme theme = null;
      com.liferay.portal.model.ColorScheme colorScheme = null;
      com.liferay.portal.theme.PortletDisplay portletDisplay = null;
      java.lang.Long portletGroupId = null;
      themeDisplay = (com.liferay.portal.theme.ThemeDisplay) _jspx_page_context.findAttribute("themeDisplay");
      company = (com.liferay.portal.model.Company) _jspx_page_context.findAttribute("company");
      account = (com.liferay.portal.model.Account) _jspx_page_context.findAttribute("account");
      user = (com.liferay.portal.model.User) _jspx_page_context.findAttribute("user");
      realUser = (com.liferay.portal.model.User) _jspx_page_context.findAttribute("realUser");
      contact = (com.liferay.portal.model.Contact) _jspx_page_context.findAttribute("contact");
      layout = (com.liferay.portal.model.Layout) _jspx_page_context.findAttribute("layout");
      layouts = (java.util.List) _jspx_page_context.findAttribute("layouts");
      plid = (java.lang.Long) _jspx_page_context.findAttribute("plid");
      layoutTypePortlet = (com.liferay.portal.model.LayoutTypePortlet) _jspx_page_context.findAttribute("layoutTypePortlet");
      scopeGroupId = (java.lang.Long) _jspx_page_context.findAttribute("scopeGroupId");
      permissionChecker = (com.liferay.portal.security.permission.PermissionChecker) _jspx_page_context.findAttribute("permissionChecker");
      locale = (java.util.Locale) _jspx_page_context.findAttribute("locale");
      timeZone = (java.util.TimeZone) _jspx_page_context.findAttribute("timeZone");
      theme = (com.liferay.portal.model.Theme) _jspx_page_context.findAttribute("theme");
      colorScheme = (com.liferay.portal.model.ColorScheme) _jspx_page_context.findAttribute("colorScheme");
      portletDisplay = (com.liferay.portal.theme.PortletDisplay) _jspx_page_context.findAttribute("portletDisplay");
      portletGroupId = (java.lang.Long) _jspx_page_context.findAttribute("portletGroupId");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

PortletRequest portletRequest = (PortletRequest)request.getAttribute(JavaConstants.JAVAX_PORTLET_REQUEST);

PortletResponse portletResponse = (PortletResponse)request.getAttribute(JavaConstants.JAVAX_PORTLET_RESPONSE);

String namespace = StringPool.BLANK;

boolean auiFormUseNamespace = GetterUtil.getBoolean((String)request.getAttribute("aui:form:useNamespace"), true);

if ((portletResponse != null) && auiFormUseNamespace) {
	namespace = portletResponse.getNamespace();
}

String currentURL = PortalUtil.getCurrentURL(request);

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

String portletId = portletDisplay.getRootPortletId();

String mainPath = themeDisplay.getPathMain();

String doAsUserId = themeDisplay.getDoAsUserId();

if (Validator.isNull(doAsUserId)) {
	doAsUserId = Encryptor.encrypt(company.getKeyObj(), String.valueOf(themeDisplay.getUserId()));
}

long doAsGroupId = themeDisplay.getDoAsGroupId();

String ckEditorConfigFileName = ParamUtil.getString(request, "ckEditorConfigFileName");

if (!_ckEditorConfigFileNames.contains(ckEditorConfigFileName)) {
	ckEditorConfigFileName = "ckconfig.jsp";
}

boolean useCustomDataProcessor = false;

if (!ckEditorConfigFileName.equals("ckconfig.jsp")) {
	useCustomDataProcessor = true;
}

boolean hideImageResizing = ParamUtil.getBoolean(request, "hideImageResizing");

Map<String, String> configParamsMap = (Map<String, String>)request.getAttribute("liferay-ui:input-editor:configParams");
Map<String, String> fileBrowserParamsMap = (Map<String, String>)request.getAttribute("liferay-ui:input-editor:fileBrowserParams");

String configParams = marshallParams(configParamsMap);
String fileBrowserParams = marshallParams(fileBrowserParamsMap);

String contentsLanguageId = (String)request.getAttribute("liferay-ui:input-editor:contentsLanguageId");
String cssClass = GetterUtil.getString((String)request.getAttribute("liferay-ui:input-editor:cssClass"));
String cssClasses = GetterUtil.getString((String)request.getAttribute("liferay-ui:input-editor:cssClasses"));
String editorImpl = (String)request.getAttribute("liferay-ui:input-editor:editorImpl");
String name = namespace + GetterUtil.getString((String)request.getAttribute("liferay-ui:input-editor:name"));
String initMethod = (String)request.getAttribute("liferay-ui:input-editor:initMethod");

String onChangeMethod = (String)request.getAttribute("liferay-ui:input-editor:onChangeMethod");

if (Validator.isNotNull(onChangeMethod)) {
	onChangeMethod = namespace + onChangeMethod;
}

boolean resizable = GetterUtil.getBoolean((String)request.getAttribute("liferay-ui:input-editor:resizable"));
boolean skipEditorLoading = GetterUtil.getBoolean((String)request.getAttribute("liferay-ui:input-editor:skipEditorLoading"));
String toolbarSet = (String)request.getAttribute("liferay-ui:input-editor:toolbarSet");

      out.write("\r\n");
      out.write("\r\n");
      //  c:if
      com.liferay.taglib.core.IfTag _jspx_th_c_005fif_005f0 = (com.liferay.taglib.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(com.liferay.taglib.core.IfTag.class);
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent(null);
      // /html/js/editor/ckeditor.jsp(70,0) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest( hideImageResizing );
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        out.write('\r');
        out.write('\n');
        out.write('	');
        if (_jspx_meth_liferay_002dutil_005fhtml_002dtop_005f0(_jspx_th_c_005fif_005f0, _jspx_page_context))
          return;
        out.write('\r');
        out.write('\n');
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
        return;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      out.write("\r\n");
      out.write("\r\n");
      //  c:if
      com.liferay.taglib.core.IfTag _jspx_th_c_005fif_005f1 = (com.liferay.taglib.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(com.liferay.taglib.core.IfTag.class);
      _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f1.setParent(null);
      // /html/js/editor/ckeditor.jsp(84,0) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f1.setTest( !skipEditorLoading );
      int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
      if (_jspx_eval_c_005fif_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        out.write('\r');
        out.write('\n');
        out.write('	');
        //  liferay-util:html-top
        com.liferay.taglib.util.HtmlTopTag _jspx_th_liferay_002dutil_005fhtml_002dtop_005f1 = (com.liferay.taglib.util.HtmlTopTag) _005fjspx_005ftagPool_005fliferay_002dutil_005fhtml_002dtop_0026_005foutputKey.get(com.liferay.taglib.util.HtmlTopTag.class);
        _jspx_th_liferay_002dutil_005fhtml_002dtop_005f1.setPageContext(_jspx_page_context);
        _jspx_th_liferay_002dutil_005fhtml_002dtop_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f1);
        // /html/js/editor/ckeditor.jsp(85,1) name = outputKey type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_liferay_002dutil_005fhtml_002dtop_005f1.setOutputKey("js_editor_ckeditor_skip_editor_loading");
        int _jspx_eval_liferay_002dutil_005fhtml_002dtop_005f1 = _jspx_th_liferay_002dutil_005fhtml_002dtop_005f1.doStartTag();
        if (_jspx_eval_liferay_002dutil_005fhtml_002dtop_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          if (_jspx_eval_liferay_002dutil_005fhtml_002dtop_005f1 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
            out = _jspx_page_context.pushBody();
            _jspx_th_liferay_002dutil_005fhtml_002dtop_005f1.setBodyContent((javax.servlet.jsp.tagext.BodyContent) out);
            _jspx_th_liferay_002dutil_005fhtml_002dtop_005f1.doInitBody();
          }
          do {
            out.write("\r\n");
            out.write("\t\t<style type=\"text/css\">\r\n");
            out.write("\t\t\ttable.cke_dialog {\r\n");
            out.write("\t\t\t\tposition: absolute !important;\r\n");
            out.write("\t\t\t}\r\n");
            out.write("\t\t</style>\r\n");
            out.write("\r\n");
            out.write("\t\t");

		long javaScriptLastModified = ServletContextUtil.getLastModified(application, "/html/js/", true);
		
            out.write("\r\n");
            out.write("\r\n");
            out.write("\t\t<script src=\"");
            out.print( HtmlUtil.escape(PortalUtil.getStaticResourceURL(request, themeDisplay.getCDNHost() + themeDisplay.getPathJavaScript() + "/editor/ckeditor/ckeditor.js", javaScriptLastModified)) );
            out.write("\" type=\"text/javascript\"></script>\r\n");
            out.write("\r\n");
            out.write("\t\t<script type=\"text/javascript\">\r\n");
            out.write("\t\t\tLiferay.namespace('EDITORS')['");
            out.print( editorImpl );
            out.write("'] = true;\r\n");
            out.write("\t\t</script>\r\n");
            out.write("\t");
            int evalDoAfterBody = _jspx_th_liferay_002dutil_005fhtml_002dtop_005f1.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
          if (_jspx_eval_liferay_002dutil_005fhtml_002dtop_005f1 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
            out = _jspx_page_context.popBody();
          }
        }
        if (_jspx_th_liferay_002dutil_005fhtml_002dtop_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          _005fjspx_005ftagPool_005fliferay_002dutil_005fhtml_002dtop_0026_005foutputKey.reuse(_jspx_th_liferay_002dutil_005fhtml_002dtop_005f1);
          return;
        }
        _005fjspx_005ftagPool_005fliferay_002dutil_005fhtml_002dtop_0026_005foutputKey.reuse(_jspx_th_liferay_002dutil_005fhtml_002dtop_005f1);
        out.write('\r');
        out.write('\n');
      }
      if (_jspx_th_c_005fif_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
        return;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
      out.write("\r\n");
      out.write("\r\n");
      //  aui:script
      com.liferay.taglib.aui.ScriptTag _jspx_th_aui_005fscript_005f0 = (com.liferay.taglib.aui.ScriptTag) _005fjspx_005ftagPool_005faui_005fscript.get(com.liferay.taglib.aui.ScriptTag.class);
      _jspx_th_aui_005fscript_005f0.setPageContext(_jspx_page_context);
      _jspx_th_aui_005fscript_005f0.setParent(null);
      int _jspx_eval_aui_005fscript_005f0 = _jspx_th_aui_005fscript_005f0.doStartTag();
      if (_jspx_eval_aui_005fscript_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        if (_jspx_eval_aui_005fscript_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
          out = _jspx_page_context.pushBody();
          _jspx_th_aui_005fscript_005f0.setBodyContent((javax.servlet.jsp.tagext.BodyContent) out);
          _jspx_th_aui_005fscript_005f0.doInitBody();
        }
        do {
          out.write("\r\n");
          out.write("\twindow['");
          out.print( name );
          out.write("'] = {\r\n");
          out.write("\t\tdestroy: function() {\r\n");
          out.write("\t\t\tCKEDITOR.instances['");
          out.print( name );
          out.write("'].destroy();\r\n");
          out.write("\r\n");
          out.write("\t\t\twindow['");
          out.print( name );
          out.write("'] = null;\r\n");
          out.write("\t\t},\r\n");
          out.write("\r\n");
          out.write("\t\tfocus: function() {\r\n");
          out.write("\t\t\tCKEDITOR.instances['");
          out.print( name );
          out.write("'].focus();\r\n");
          out.write("\t\t},\r\n");
          out.write("\r\n");
          out.write("\t\tgetCkData: function() {\r\n");
          out.write("\t\t\tvar data = CKEDITOR.instances['");
          out.print( name );
          out.write("'].getData();\r\n");
          out.write("\r\n");
          out.write("\t\t\tif (CKEDITOR.env.gecko && (CKEDITOR.tools.trim(data) == '<br />')) {\r\n");
          out.write("\t\t\t\tdata = '';\r\n");
          out.write("\t\t\t}\r\n");
          out.write("\r\n");
          out.write("\t\t\treturn data;\r\n");
          out.write("\t\t},\r\n");
          out.write("\r\n");
          out.write("\t\tgetHTML: function() {\r\n");
          out.write("\t\t\treturn window['");
          out.print( name );
          out.write("'].getCkData();\r\n");
          out.write("\t\t},\r\n");
          out.write("\r\n");
          out.write("\t\tgetText: function() {\r\n");
          out.write("\t\t\treturn window['");
          out.print( name );
          out.write("'].getCkData();\r\n");
          out.write("\t\t},\r\n");
          out.write("\r\n");
          out.write("\t\t");

		if (Validator.isNotNull(onChangeMethod)) {
		
          out.write("\r\n");
          out.write("\r\n");
          out.write("\t\t\tonChangeCallback: function() {\r\n");
          out.write("\t\t\t\tvar ckEditor = CKEDITOR.instances['");
          out.print( name );
          out.write("'];\r\n");
          out.write("\t\t\t\tvar dirty = ckEditor.checkDirty();\r\n");
          out.write("\r\n");
          out.write("\t\t\t\tif (dirty) {\r\n");
          out.write("\t\t\t\t\t");
          out.print( HtmlUtil.escapeJS(onChangeMethod) );
          out.write("(window['");
          out.print( name );
          out.write("'].getText());\r\n");
          out.write("\r\n");
          out.write("\t\t\t\t\tckEditor.resetDirty();\r\n");
          out.write("\t\t\t\t}\r\n");
          out.write("\t\t\t},\r\n");
          out.write("\r\n");
          out.write("\t\t");

		}
		
          out.write("\r\n");
          out.write("\r\n");
          out.write("\t\tsetHTML: function(value) {\r\n");
          out.write("\t\t\tCKEDITOR.instances['");
          out.print( name );
          out.write("'].setData(value);\r\n");
          out.write("\t\t}\r\n");
          out.write("\t};\r\n");
          int evalDoAfterBody = _jspx_th_aui_005fscript_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
        if (_jspx_eval_aui_005fscript_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
          out = _jspx_page_context.popBody();
        }
      }
      if (_jspx_th_aui_005fscript_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        _005fjspx_005ftagPool_005faui_005fscript.reuse(_jspx_th_aui_005fscript_005f0);
        return;
      }
      _005fjspx_005ftagPool_005faui_005fscript.reuse(_jspx_th_aui_005fscript_005f0);
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"");
      out.print( cssClass );
      out.write("\">\r\n");
      out.write("\t<textarea id=\"");
      out.print( name );
      out.write("\" name=\"");
      out.print( name );
      out.write("\" style=\"display: none;\"></textarea>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      //  aui:script
      com.liferay.taglib.aui.ScriptTag _jspx_th_aui_005fscript_005f1 = (com.liferay.taglib.aui.ScriptTag) _005fjspx_005ftagPool_005faui_005fscript_0026_005fuse.get(com.liferay.taglib.aui.ScriptTag.class);
      _jspx_th_aui_005fscript_005f1.setPageContext(_jspx_page_context);
      _jspx_th_aui_005fscript_005f1.setParent(null);
      // /html/js/editor/ckeditor.jsp(163,0) name = use type = java.lang.String reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_aui_005fscript_005f1.setUse("aui-base");
      int _jspx_eval_aui_005fscript_005f1 = _jspx_th_aui_005fscript_005f1.doStartTag();
      if (_jspx_eval_aui_005fscript_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        if (_jspx_eval_aui_005fscript_005f1 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
          out = _jspx_page_context.pushBody();
          _jspx_th_aui_005fscript_005f1.setBodyContent((javax.servlet.jsp.tagext.BodyContent) out);
          _jspx_th_aui_005fscript_005f1.doInitBody();
        }
        do {
          out.write("\r\n");
          out.write("\t(function() {\r\n");
          out.write("\t\tfunction setData() {\r\n");
          out.write("\t\t\t");
          //  c:if
          com.liferay.taglib.core.IfTag _jspx_th_c_005fif_005f2 = (com.liferay.taglib.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(com.liferay.taglib.core.IfTag.class);
          _jspx_th_c_005fif_005f2.setPageContext(_jspx_page_context);
          _jspx_th_c_005fif_005f2.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_aui_005fscript_005f1);
          // /html/js/editor/ckeditor.jsp(166,3) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
          _jspx_th_c_005fif_005f2.setTest( Validator.isNotNull(initMethod) );
          int _jspx_eval_c_005fif_005f2 = _jspx_th_c_005fif_005f2.doStartTag();
          if (_jspx_eval_c_005fif_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
            out.write("\r\n");
            out.write("\t\t\t\tckEditor.setData(");
            out.print( HtmlUtil.escapeJS(namespace + initMethod) );
            out.write("());\r\n");
            out.write("\t\t\t");
          }
          if (_jspx_th_c_005fif_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
            _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f2);
            return;
          }
          _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f2);
          out.write("\r\n");
          out.write("\t\t}\r\n");
          out.write("\r\n");
          out.write("\t\t");

		StringBundler sb = new StringBundler(10);

		sb.append(mainPath);
		sb.append("/portal/fckeditor?p_l_id=");
		sb.append(plid);
		sb.append("&p_p_id=");
		sb.append(HttpUtil.encodeURL(portletId));
		sb.append("&doAsUserId=");
		sb.append(HttpUtil.encodeURL(doAsUserId));
		sb.append("&doAsGroupId=");
		sb.append(HttpUtil.encodeURL(String.valueOf(doAsGroupId)));
		sb.append(fileBrowserParams);

		String connectorURL = HttpUtil.encodeURL(sb.toString());
		
          out.write("\r\n");
          out.write("\r\n");
          out.write("\t\tCKEDITOR.replace(\r\n");
          out.write("\t\t\t'");
          out.print( name );
          out.write("',\r\n");
          out.write("\t\t\t{\r\n");
          out.write("\t\t\t\tcustomConfig: '");
          out.print( PortalUtil.getPathContext() );
          out.write("/html/js/editor/ckeditor/");
          out.print( HtmlUtil.escapeJS(ckEditorConfigFileName) );
          out.write("?p_l_id=");
          out.print( plid );
          out.write("&p_p_id=");
          out.print( HttpUtil.encodeURL(portletId) );
          out.write("&p_main_path=");
          out.print( HttpUtil.encodeURL(mainPath) );
          out.write("&doAsUserId=");
          out.print( HttpUtil.encodeURL(doAsUserId) );
          out.write("&doAsGroupId=");
          out.print( HttpUtil.encodeURL(String.valueOf(doAsGroupId)) );
          out.write("&cssPath=");
          out.print( HttpUtil.encodeURL(themeDisplay.getPathThemeCss()) );
          out.write("&cssClasses=");
          out.print( HttpUtil.encodeURL(cssClasses) );
          out.write("&imagesPath=");
          out.print( HttpUtil.encodeURL(themeDisplay.getPathThemeImages()) );
          out.write("&languageId=");
          out.print( HttpUtil.encodeURL(LocaleUtil.toLanguageId(locale)) );
          out.write("&contentsLanguageId=");
          out.print( HttpUtil.encodeURL(Validator.isNotNull(contentsLanguageId) ? contentsLanguageId : LocaleUtil.toLanguageId(locale)) );
          out.write("&resizable=");
          out.print( resizable );
          out.print( configParams );
          out.write("',\r\n");
          out.write("\t\t\t\tfilebrowserBrowseUrl: '");
          out.print( PortalUtil.getPathContext() );
          out.write("/html/js/editor/ckeditor/editor/filemanager/browser/liferay/browser.html?Connector=");
          out.print( connectorURL );
          out.print( fileBrowserParams );
          out.write("',\r\n");
          out.write("\t\t\t\tfilebrowserUploadUrl: null,\r\n");
          out.write("\t\t\t\ttoolbar: '");
          out.print( TextFormatter.format(HtmlUtil.escapeJS(toolbarSet), TextFormatter.M) );
          out.write("'\r\n");
          out.write("\t\t\t}\r\n");
          out.write("\t\t);\r\n");
          out.write("\r\n");
          out.write("\t\tvar ckEditor = CKEDITOR.instances['");
          out.print( name );
          out.write("'];\r\n");
          out.write("\r\n");
          out.write("\t\tvar customDataProcessorLoaded = false;\r\n");
          out.write("\r\n");
          out.write("\t\t");

		if (useCustomDataProcessor) {
		
          out.write("\r\n");
          out.write("\r\n");
          out.write("\t\t\tckEditor.on(\r\n");
          out.write("\t\t\t\t'customDataProcessorLoaded',\r\n");
          out.write("\t\t\t\tfunction() {\r\n");
          out.write("\t\t\t\t\tcustomDataProcessorLoaded = true;\r\n");
          out.write("\r\n");
          out.write("\t\t\t\t\tif (instanceReady) {\r\n");
          out.write("\t\t\t\t\t\tsetData();\r\n");
          out.write("\t\t\t\t\t}\r\n");
          out.write("\t\t\t\t}\r\n");
          out.write("\t\t\t);\r\n");
          out.write("\r\n");
          out.write("\t\t");

		}
		
          out.write("\r\n");
          out.write("\r\n");
          out.write("\t\tvar instanceReady = false;\r\n");
          out.write("\r\n");
          out.write("\t\tckEditor.on(\r\n");
          out.write("\t\t\t'instanceReady',\r\n");
          out.write("\t\t\tfunction() {\r\n");
          out.write("\r\n");
          out.write("\t\t\t\t");

				if (useCustomDataProcessor) {
				
          out.write("\r\n");
          out.write("\r\n");
          out.write("\t\t\t\t\tinstanceReady = true;\r\n");
          out.write("\r\n");
          out.write("\t\t\t\t\tif (customDataProcessorLoaded) {\r\n");
          out.write("\t\t\t\t\t\tsetData();\r\n");
          out.write("\t\t\t\t\t}\r\n");
          out.write("\r\n");
          out.write("\t\t\t\t");

				}
				else {
				
          out.write("\r\n");
          out.write("\r\n");
          out.write("\t\t\t\t\tsetData();\r\n");
          out.write("\r\n");
          out.write("\t\t\t\t");

				}

				if (Validator.isNotNull(onChangeMethod)) {
				
          out.write("\r\n");
          out.write("\r\n");
          out.write("\t\t\t\t\tsetInterval(\r\n");
          out.write("\t\t\t\t\t\tfunction() {\r\n");
          out.write("\t\t\t\t\t\t\ttry {\r\n");
          out.write("\t\t\t\t\t\t\t\twindow['");
          out.print( name );
          out.write("'].onChangeCallback();\r\n");
          out.write("\t\t\t\t\t\t\t}\r\n");
          out.write("\t\t\t\t\t\t\tcatch (e) {\r\n");
          out.write("\t\t\t\t\t\t\t}\r\n");
          out.write("\t\t\t\t\t\t},\r\n");
          out.write("\t\t\t\t\t\t300\r\n");
          out.write("\t\t\t\t\t);\r\n");
          out.write("\r\n");
          out.write("\t\t\t\t");

				}
				
          out.write("\r\n");
          out.write("\r\n");
          out.write("\t\t\t}\r\n");
          out.write("\t\t);\r\n");
          out.write("\r\n");
          out.write("\t\t");

		if (toolbarSet.equals("creole")) {
		
          out.write("\r\n");
          out.write("\r\n");
          out.write("\t\t\tLiferay.provide(\r\n");
          out.write("\t\t\t\twindow,\r\n");
          out.write("\t\t\t\t'");
          out.print( name );
          out.write("creoleDialogHandlers',\r\n");
          out.write("\t\t\t\tfunction(event) {\r\n");
          out.write("\t\t\t\t\tvar A = AUI();\r\n");
          out.write("\r\n");
          out.write("\t\t\t\t\tvar MODIFIED = 'modified';\r\n");
          out.write("\r\n");
          out.write("\t\t\t\t\tvar SELECTOR_HBOX_FIRST = '.cke_dialog_ui_hbox_first';\r\n");
          out.write("\r\n");
          out.write("\t\t\t\t\tvar dialog = event.data.definition.dialog;\r\n");
          out.write("\r\n");
          out.write("\t\t\t\t\tif (dialog.getName() == 'image') {\r\n");
          out.write("\t\t\t\t\t\tvar lockButton = A.one('.cke_btn_locked');\r\n");
          out.write("\r\n");
          out.write("\t\t\t\t\t\tif (lockButton) {\r\n");
          out.write("\t\t\t\t\t\t\tvar imageProperties = lockButton.ancestor(SELECTOR_HBOX_FIRST);\r\n");
          out.write("\r\n");
          out.write("\t\t\t\t\t\t\tif (imageProperties) {\r\n");
          out.write("\t\t\t\t\t\t\t\timageProperties.hide();\r\n");
          out.write("\t\t\t\t\t\t\t}\r\n");
          out.write("\t\t\t\t\t\t}\r\n");
          out.write("\r\n");
          out.write("\t\t\t\t\t\tvar imagePreviewBox = A.one('.ImagePreviewBox');\r\n");
          out.write("\r\n");
          out.write("\t\t\t\t\t\tif (imagePreviewBox) {\r\n");
          out.write("\t\t\t\t\t\t\timagePreviewBox.setStyle('width', 410);\r\n");
          out.write("\t\t\t\t\t\t}\r\n");
          out.write("\t\t\t\t\t}\r\n");
          out.write("\t\t\t\t\telse if (dialog.getName() == 'cellProperties') {\r\n");
          out.write("\t\t\t\t\t\tvar containerNode = A.one('#' + dialog.getElement('cellType').$.id);\r\n");
          out.write("\r\n");
          out.write("\t\t\t\t\t\tif (!containerNode.getData(MODIFIED)) {\r\n");
          out.write("\t\t\t\t\t\t\tcontainerNode.one(SELECTOR_HBOX_FIRST).hide();\r\n");
          out.write("\r\n");
          out.write("\t\t\t\t\t\t\tcontainerNode.one('.cke_dialog_ui_hbox_child').hide();\r\n");
          out.write("\r\n");
          out.write("\t\t\t\t\t\t\tvar cellTypeWrapper = containerNode.one('.cke_dialog_ui_hbox_last');\r\n");
          out.write("\r\n");
          out.write("\t\t\t\t\t\t\tcellTypeWrapper.replaceClass('cke_dialog_ui_hbox_last', 'cke_dialog_ui_hbox_first');\r\n");
          out.write("\r\n");
          out.write("\t\t\t\t\t\t\tcellTypeWrapper.setStyle('width', '100%');\r\n");
          out.write("\r\n");
          out.write("\t\t\t\t\t\t\tcellTypeWrapper.all('tr').each(\r\n");
          out.write("\t\t\t\t\t\t\t\tfunction(item, index, collection) {\r\n");
          out.write("\t\t\t\t\t\t\t\t\tif (index > 0) {\r\n");
          out.write("\t\t\t\t\t\t\t\t\t\titem.hide();\r\n");
          out.write("\t\t\t\t\t\t\t\t\t}\r\n");
          out.write("\t\t\t\t\t\t\t\t}\r\n");
          out.write("\t\t\t\t\t\t\t);\r\n");
          out.write("\r\n");
          out.write("\t\t\t\t\t\t\tcontainerNode.setData(MODIFIED, true);\r\n");
          out.write("\t\t\t\t\t\t}\r\n");
          out.write("\t\t\t\t\t}\r\n");
          out.write("\t\t\t\t},\r\n");
          out.write("\t\t\t\t['aui-base']\r\n");
          out.write("\t\t\t);\r\n");
          out.write("\r\n");
          out.write("\t\t\tckEditor.on('dialogShow', window['");
          out.print( name );
          out.write("creoleDialogHandlers']);\r\n");
          out.write("\r\n");
          out.write("\t\t");

		}
		
          out.write("\r\n");
          out.write("\r\n");
          out.write("\t})();\r\n");
          out.write("\r\n");
          int evalDoAfterBody = _jspx_th_aui_005fscript_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
        if (_jspx_eval_aui_005fscript_005f1 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
          out = _jspx_page_context.popBody();
        }
      }
      if (_jspx_th_aui_005fscript_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        _005fjspx_005ftagPool_005faui_005fscript_0026_005fuse.reuse(_jspx_th_aui_005fscript_005f1);
        return;
      }
      _005fjspx_005ftagPool_005faui_005fscript_0026_005fuse.reuse(_jspx_th_aui_005fscript_005f1);
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_liferay_002dutil_005fhtml_002dtop_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fif_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  liferay-util:html-top
    com.liferay.taglib.util.HtmlTopTag _jspx_th_liferay_002dutil_005fhtml_002dtop_005f0 = (com.liferay.taglib.util.HtmlTopTag) _005fjspx_005ftagPool_005fliferay_002dutil_005fhtml_002dtop_0026_005foutputKey.get(com.liferay.taglib.util.HtmlTopTag.class);
    _jspx_th_liferay_002dutil_005fhtml_002dtop_005f0.setPageContext(_jspx_page_context);
    _jspx_th_liferay_002dutil_005fhtml_002dtop_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f0);
    // /html/js/editor/ckeditor.jsp(71,1) name = outputKey type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_liferay_002dutil_005fhtml_002dtop_005f0.setOutputKey("js_editor_ckeditor_hide_image_resizing");
    int _jspx_eval_liferay_002dutil_005fhtml_002dtop_005f0 = _jspx_th_liferay_002dutil_005fhtml_002dtop_005f0.doStartTag();
    if (_jspx_eval_liferay_002dutil_005fhtml_002dtop_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      if (_jspx_eval_liferay_002dutil_005fhtml_002dtop_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
        out = _jspx_page_context.pushBody();
        _jspx_th_liferay_002dutil_005fhtml_002dtop_005f0.setBodyContent((javax.servlet.jsp.tagext.BodyContent) out);
        _jspx_th_liferay_002dutil_005fhtml_002dtop_005f0.doInitBody();
      }
      do {
        out.write("\r\n");
        out.write("\t\t<style type=\"text/css\">\r\n");
        out.write("\t\t\ta.cke_dialog_tab {\r\n");
        out.write("\t\t\t\tdisplay: none !important;\r\n");
        out.write("\t\t\t}\r\n");
        out.write("\r\n");
        out.write("\t\t\ta.cke_dialog_tab_selected {\r\n");
        out.write("\t\t\t\tdisplay:block !important;\r\n");
        out.write("\t\t\t}\r\n");
        out.write("\t\t</style>\r\n");
        out.write("\t");
        int evalDoAfterBody = _jspx_th_liferay_002dutil_005fhtml_002dtop_005f0.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
      if (_jspx_eval_liferay_002dutil_005fhtml_002dtop_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
        out = _jspx_page_context.popBody();
      }
    }
    if (_jspx_th_liferay_002dutil_005fhtml_002dtop_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fliferay_002dutil_005fhtml_002dtop_0026_005foutputKey.reuse(_jspx_th_liferay_002dutil_005fhtml_002dtop_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005fliferay_002dutil_005fhtml_002dtop_0026_005foutputKey.reuse(_jspx_th_liferay_002dutil_005fhtml_002dtop_005f0);
    return false;
  }
}
